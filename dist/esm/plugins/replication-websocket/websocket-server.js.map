{"version":3,"file":"websocket-server.js","names":["pkg","WebSocketServer","rxStorageInstanceToReplicationHandler","PROMISE_RESOLVE_VOID","getFromMapOrCreate","Subject","startSocketServer","options","wss","closed","closeServer","onConnection$","complete","Promise","res","rej","ws","clients","close","err","on","req","next","server","asObservable","startWebsocketServer","database","wsOptions","serverState","onDestroy","push","replicationHandlerByCollection","Map","getReplicationHandler","collectionName","collections","Error","handler","collection","storageInstance","conflictHandler","token","subscribe","socket","onCloseHandlers","onclose","map","fn","messageString","message","JSON","parse","collectionRules","method","changeStreamSub","masterChangeStream$","ev","streamResponse","id","result","send","stringify","unsubscribe","params","response"],"sources":["../../../../src/plugins/replication-websocket/websocket-server.ts"],"sourcesContent":["import type {\n    RxReplicationHandler\n} from '../../types/index.d.ts';\n\nimport type {\n    WebSocket,\n    ServerOptions\n} from 'isomorphic-ws';\nimport pkg from 'isomorphic-ws';\nconst { WebSocketServer } = pkg;\n\nimport type {\n    WebsocketMessageResponseType,\n    WebsocketMessageType,\n    WebsocketServerOptions,\n    WebsocketServerState\n} from './websocket-types.ts';\nimport { rxStorageInstanceToReplicationHandler } from '../../replication-protocol/index.ts';\nimport {\n    PROMISE_RESOLVE_VOID, getFromMapOrCreate\n} from '../../plugins/utils/index.ts';\nimport { Subject } from 'rxjs';\n\nexport function startSocketServer(options: ServerOptions): WebsocketServerState {\n    const wss = new WebSocketServer(options);\n    let closed = false;\n    function closeServer() {\n        if (closed) {\n            return PROMISE_RESOLVE_VOID;\n        }\n        closed = true;\n        onConnection$.complete();\n        return new Promise<void>((res, rej) => {\n            /**\n             * We have to close all client connections,\n             * otherwise wss.close() will never call the callback.\n             * @link https://github.com/websockets/ws/issues/1288#issuecomment-360594458\n             */\n            for (const ws of wss.clients) {\n                ws.close();\n            }\n            wss.close((err: any) => {\n                if (err) {\n                    rej(err);\n                } else {\n                    res();\n                }\n            });\n        });\n    }\n\n    const onConnection$ = new Subject<WebSocket>();\n    wss.on('connection', (ws: any, req: any) => onConnection$.next({ws, req} as any));\n\n    return {\n        server: wss,\n        close: closeServer,\n        onConnection$: onConnection$.asObservable()\n    };\n}\n\nexport function startWebsocketServer(options: WebsocketServerOptions): WebsocketServerState {\n    const { database, ...wsOptions } = options;\n    const serverState = startSocketServer(wsOptions);\n\n    // auto close when the database gets destroyed\n    database.onDestroy.push(() => serverState.close());\n\n    const replicationHandlerByCollection: Map<string, RxReplicationHandler<any, any>> = new Map();\n    function getReplicationHandler(collectionName: string): RxReplicationHandler<any, any> {\n        if (!database.collections[collectionName]) {\n            throw new Error('collection ' + collectionName + ' does not exist');\n        }\n\n        const handler = getFromMapOrCreate(\n            replicationHandlerByCollection,\n            collectionName,\n            () => {\n                const collection = database.collections[collectionName];\n                return rxStorageInstanceToReplicationHandler(\n                    collection.storageInstance,\n                    collection.conflictHandler,\n                    database.token\n                );\n            }\n        );\n        return handler;\n    }\n\n    serverState.onConnection$.subscribe(socket => {\n        const {ws, req} = socket;\n        const onCloseHandlers: Function[] = [];\n        ws.onclose = () => {\n            onCloseHandlers.map(fn => fn());\n        };\n        ws.on('message', async (messageString: string) => {\n            const message: WebsocketMessageType = JSON.parse(messageString);\n            if(options.collectionRules && !options.collectionRules(req, message.collection)){\n                // access denial\n                return;\n            }\n            const handler = getReplicationHandler(message.collection);\n            const method = handler[message.method];\n\n            /**\n             * If it is not a function,\n             * it means that the client requested the masterChangeStream$\n             */\n            if (typeof method !== 'function') {\n                const changeStreamSub = handler.masterChangeStream$.subscribe(ev => {\n                    const streamResponse: WebsocketMessageResponseType = {\n                        id: 'stream',\n                        collection: message.collection,\n                        result: ev\n                    };\n                    ws.send(JSON.stringify(streamResponse));\n                });\n                onCloseHandlers.push(() => changeStreamSub.unsubscribe());\n                return;\n            }\n            const result = await (method as any)(...message.params);\n            const response: WebsocketMessageResponseType = {\n                id: message.id,\n                collection: message.collection,\n                result\n            };\n            ws.send(JSON.stringify(response));\n        });\n    });\n\n\n    return serverState;\n}\n"],"mappings":"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"}