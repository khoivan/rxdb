{"version":3,"file":"websocket-server.js","names":["_isomorphicWs","_interopRequireDefault","require","_index","_index2","_rxjs","WebSocketServer","pkg","startSocketServer","options","wss","closed","closeServer","PROMISE_RESOLVE_VOID","onConnection$","complete","Promise","res","rej","ws","clients","close","err","Subject","on","req","next","server","asObservable","startWebsocketServer","database","wsOptions","serverState","onDestroy","push","replicationHandlerByCollection","Map","getReplicationHandler","collectionName","collections","Error","handler","getFromMapOrCreate","collection","rxStorageInstanceToReplicationHandler","storageInstance","conflictHandler","token","subscribe","socket","onCloseHandlers","onclose","map","fn","messageString","message","JSON","parse","collectionRules","method","changeStreamSub","masterChangeStream$","ev","streamResponse","id","result","send","stringify","unsubscribe","params","response"],"sources":["../../../../src/plugins/replication-websocket/websocket-server.ts"],"sourcesContent":["import type {\n    RxReplicationHandler\n} from '../../types/index.d.ts';\n\nimport type {\n    WebSocket,\n    ServerOptions\n} from 'isomorphic-ws';\nimport pkg from 'isomorphic-ws';\nconst { WebSocketServer } = pkg;\n\nimport type {\n    WebsocketMessageResponseType,\n    WebsocketMessageType,\n    WebsocketServerOptions,\n    WebsocketServerState\n} from './websocket-types.ts';\nimport { rxStorageInstanceToReplicationHandler } from '../../replication-protocol/index.ts';\nimport {\n    PROMISE_RESOLVE_VOID, getFromMapOrCreate\n} from '../../plugins/utils/index.ts';\nimport { Subject } from 'rxjs';\n\nexport function startSocketServer(options: ServerOptions): WebsocketServerState {\n    const wss = new WebSocketServer(options);\n    let closed = false;\n    function closeServer() {\n        if (closed) {\n            return PROMISE_RESOLVE_VOID;\n        }\n        closed = true;\n        onConnection$.complete();\n        return new Promise<void>((res, rej) => {\n            /**\n             * We have to close all client connections,\n             * otherwise wss.close() will never call the callback.\n             * @link https://github.com/websockets/ws/issues/1288#issuecomment-360594458\n             */\n            for (const ws of wss.clients) {\n                ws.close();\n            }\n            wss.close((err: any) => {\n                if (err) {\n                    rej(err);\n                } else {\n                    res();\n                }\n            });\n        });\n    }\n\n    const onConnection$ = new Subject<WebSocket>();\n    wss.on('connection', (ws: any, req: any) => onConnection$.next({ws, req} as any));\n\n    return {\n        server: wss,\n        close: closeServer,\n        onConnection$: onConnection$.asObservable()\n    };\n}\n\nexport function startWebsocketServer(options: WebsocketServerOptions): WebsocketServerState {\n    const { database, ...wsOptions } = options;\n    const serverState = startSocketServer(wsOptions);\n\n    // auto close when the database gets destroyed\n    database.onDestroy.push(() => serverState.close());\n\n    const replicationHandlerByCollection: Map<string, RxReplicationHandler<any, any>> = new Map();\n    function getReplicationHandler(collectionName: string): RxReplicationHandler<any, any> {\n        if (!database.collections[collectionName]) {\n            throw new Error('collection ' + collectionName + ' does not exist');\n        }\n\n        const handler = getFromMapOrCreate(\n            replicationHandlerByCollection,\n            collectionName,\n            () => {\n                const collection = database.collections[collectionName];\n                return rxStorageInstanceToReplicationHandler(\n                    collection.storageInstance,\n                    collection.conflictHandler,\n                    database.token\n                );\n            }\n        );\n        return handler;\n    }\n\n    serverState.onConnection$.subscribe(socket => {\n        const {ws, req} = socket;\n        const onCloseHandlers: Function[] = [];\n        ws.onclose = () => {\n            onCloseHandlers.map(fn => fn());\n        };\n        ws.on('message', async (messageString: string) => {\n            const message: WebsocketMessageType = JSON.parse(messageString);\n            if(options.collectionRules && !options.collectionRules(req, message.collection)){\n                // access denial\n                return;\n            }\n            const handler = getReplicationHandler(message.collection);\n            const method = handler[message.method];\n\n            /**\n             * If it is not a function,\n             * it means that the client requested the masterChangeStream$\n             */\n            if (typeof method !== 'function') {\n                const changeStreamSub = handler.masterChangeStream$.subscribe(ev => {\n                    const streamResponse: WebsocketMessageResponseType = {\n                        id: 'stream',\n                        collection: message.collection,\n                        result: ev\n                    };\n                    ws.send(JSON.stringify(streamResponse));\n                });\n                onCloseHandlers.push(() => changeStreamSub.unsubscribe());\n                return;\n            }\n            const result = await (method as any)(...message.params);\n            const response: WebsocketMessageResponseType = {\n                id: message.id,\n                collection: message.collection,\n                result\n            };\n            ws.send(JSON.stringify(response));\n        });\n    });\n\n\n    return serverState;\n}\n"],"mappings":"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"}